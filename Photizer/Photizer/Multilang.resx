<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddPicture.AddPerson" xml:space="preserve">
    <value>Add Person</value>
  </data>
  <data name="AddPicture.CreatedDate" xml:space="preserve">
    <value>Created Date</value>
  </data>
  <data name="AddPicture.CreatedTime" xml:space="preserve">
    <value>Created Time</value>
  </data>
  <data name="AddPicture.CreateNewLocation" xml:space="preserve">
    <value>Create new Location</value>
  </data>
  <data name="AddPicture.CreateNewPerson" xml:space="preserve">
    <value>Create new Person</value>
  </data>
  <data name="AddPicture.Rating" xml:space="preserve">
    <value>Rating</value>
  </data>
  <data name="AddPicture.Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="AddPicture.SelectCountry" xml:space="preserve">
    <value>Select Country</value>
  </data>
  <data name="AddPicture.SelectImages" xml:space="preserve">
    <value>Select Images</value>
  </data>
  <data name="AddPicture.SelectOrAddCamera" xml:space="preserve">
    <value>Select or Add Camera</value>
  </data>
  <data name="AddPicture.SelectOrAddCategory" xml:space="preserve">
    <value>Select or Add Category</value>
  </data>
  <data name="AddPicture.SelectOrAddLense" xml:space="preserve">
    <value>Select or Add Lense</value>
  </data>
  <data name="AddPicture.SelectOrAddTag" xml:space="preserve">
    <value>Select or Add Tag</value>
  </data>
  <data name="AddPicture.SelectPerson" xml:space="preserve">
    <value>Select Person</value>
  </data>
  <data name="AddPicture.SelectPlace" xml:space="preserve">
    <value>Select Place</value>
  </data>
  <data name="AddPicture.Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="AddPicture.Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="AppSettings.DatabaseImportExport" xml:space="preserve">
    <value>Database Import/Export</value>
  </data>
  <data name="AppSettings.FolderSettings" xml:space="preserve">
    <value>Folder Settings</value>
  </data>
  <data name="CollectionsDetail.BackToCollections" xml:space="preserve">
    <value>Back to Collections</value>
  </data>
  <data name="CollectionsDetail.ExportToFolder" xml:space="preserve">
    <value>Export to Folder</value>
  </data>
  <data name="CollectionsDetail.PictuersPerPage" xml:space="preserve">
    <value>Pictures per Page</value>
  </data>
  <data name="DatabaseImportExport.Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="DatabaseImportExport.Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="DatabaseImportExport.InfoOne" xml:space="preserve">
    <value>Photizer's Data is stored in a Database file called 'Photizer.db' in the Photizer's AppData folder:
   CurrentUser/AppData/Local/PhotizerData
Every time the application is closed Photizer will automatically create a Backup in the /DatabaseBackup folder.</value>
  </data>
  <data name="DatabaseImportExport.InfoThree" xml:space="preserve">
    <value>To replace the current database with a backup you first have to close the Photizer App. 
Then copy the database file from the backup folder into the 'Photizer' folder and replace the 'Photizer.db' file.
The 'Import' button opens both folders.</value>
  </data>
  <data name="DatabaseImportExport.InfoTwo" xml:space="preserve">
    <value>'Export' will do a manual copy of the database into the backup folder.</value>
  </data>
  <data name="DetailEdit.AddTag" xml:space="preserve">
    <value>Add Tag</value>
  </data>
  <data name="DetailEdit.SelectCamera" xml:space="preserve">
    <value>Select Camera</value>
  </data>
  <data name="DetailEdit.SelectCategory" xml:space="preserve">
    <value>Select Category</value>
  </data>
  <data name="DetailEdit.SelectLense" xml:space="preserve">
    <value>Select Lense</value>
  </data>
  <data name="DetailEdit.SelectTag" xml:space="preserve">
    <value>Select Tag</value>
  </data>
  <data name="EditCamerasData.Header" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="EditCategoriesData.Header" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="EditData.EditCameras" xml:space="preserve">
    <value>Edit Cameras</value>
  </data>
  <data name="EditData.EditCategories" xml:space="preserve">
    <value>Edit Categories</value>
  </data>
  <data name="EditData.EditLenses" xml:space="preserve">
    <value>Edit Lenses</value>
  </data>
  <data name="EditData.EditLocations" xml:space="preserve">
    <value>Edit Locations</value>
  </data>
  <data name="EditData.EditPeople" xml:space="preserve">
    <value>Edit People</value>
  </data>
  <data name="EditData.EditTags" xml:space="preserve">
    <value>Edit Tags</value>
  </data>
  <data name="EditLensesData.Header" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="EditLocationData.HeaderCountry" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="EditLocationData.HeaderLatitude" xml:space="preserve">
    <value>Latitude</value>
  </data>
  <data name="EditLocationData.HeaderLocation" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="EditLocationData.HeaderLongitude" xml:space="preserve">
    <value>Longitude</value>
  </data>
  <data name="EditPeopleData.HeaderFirstName" xml:space="preserve">
    <value>FirstName</value>
  </data>
  <data name="EditPeopleData.HeaderLastName" xml:space="preserve">
    <value>LastName</value>
  </data>
  <data name="EditTagsData.Header" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="MainMenu.AddPictures" xml:space="preserve">
    <value>Add Photos</value>
  </data>
  <data name="MainMenu.Collections" xml:space="preserve">
    <value>Collections</value>
  </data>
  <data name="MainMenu.EditData" xml:space="preserve">
    <value>Edit Data</value>
  </data>
  <data name="MainMenu.Map" xml:space="preserve">
    <value>Map</value>
  </data>
  <data name="MainMenu.Pictures" xml:space="preserve">
    <value>Photos Overview</value>
  </data>
  <data name="MainMenu.Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="FolderSettings.Info" xml:space="preserve">
    <value>Before you can use Photizer you have to select a Main and Backup Folder where the pictures will be saved to! When a picture is added to Photizer one file will be created in the Main folder and a Copy in the Backup folder</value>
  </data>
  <data name="FolderSettings.SelectBackupFolder" xml:space="preserve">
    <value>Select Backup Folder</value>
  </data>
  <data name="FolderSettings.SelectMainFolder" xml:space="preserve">
    <value>Select Main Folder</value>
  </data>
  <data name="PictureDetail.GoBack" xml:space="preserve">
    <value>Go Back</value>
  </data>
  <data name="PictureDetail.ToggleEdit" xml:space="preserve">
    <value>Toggle Edit</value>
  </data>
  <data name="SearchParamater.SelectPlace" xml:space="preserve">
    <value>Select Place</value>
  </data>
  <data name="SearchParameter.AddPerson" xml:space="preserve">
    <value>Add Person</value>
  </data>
  <data name="SearchParameter.AddTag" xml:space="preserve">
    <value>Add Tag</value>
  </data>
  <data name="SearchParameter.CreatedDateFrom" xml:space="preserve">
    <value>Created Date from</value>
  </data>
  <data name="SearchParameter.CreatedDateTo" xml:space="preserve">
    <value>Created Date to</value>
  </data>
  <data name="SearchParameter.CreatedTimeFrom" xml:space="preserve">
    <value>Created Time from</value>
  </data>
  <data name="SearchParameter.CreatedTimeTo" xml:space="preserve">
    <value>Created Time to</value>
  </data>
  <data name="SearchParameter.PictureTitle" xml:space="preserve">
    <value>Picture Title</value>
  </data>
  <data name="SearchParameter.SearchParameters" xml:space="preserve">
    <value>Search Parameters</value>
  </data>
  <data name="SearchParameter.SelectCamera" xml:space="preserve">
    <value>Select Camera</value>
  </data>
  <data name="SearchParameter.SelectCategory" xml:space="preserve">
    <value>Select Category</value>
  </data>
  <data name="SearchParameter.SelectCountry" xml:space="preserve">
    <value>Select Country</value>
  </data>
  <data name="SearchParameter.SelectLense" xml:space="preserve">
    <value>Select Lense</value>
  </data>
  <data name="SearchParameter.SelectPerson" xml:space="preserve">
    <value>Select Person</value>
  </data>
  <data name="SearchParameter.SelectTag" xml:space="preserve">
    <value>Select Tag</value>
  </data>
  <data name="SearchResult.AddToCollection" xml:space="preserve">
    <value>Add to Collection</value>
  </data>
  <data name="SearchResult.ExportToFolder" xml:space="preserve">
    <value>Export to Folder</value>
  </data>
  <data name="SearchResult.PicturesPerPage" xml:space="preserve">
    <value>Pictures per Page</value>
  </data>
  <data name="SearchResult.SelectCollection" xml:space="preserve">
    <value>Select Collection</value>
  </data>
  <data name="AddDataDialog.Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddDataDialog.FinishCancel" xml:space="preserve">
    <value>Finish/Cancel</value>
  </data>
  <data name="AddNewCollectionDialog.CollectionName" xml:space="preserve">
    <value>Collection Name</value>
  </data>
  <data name="AddNewLocationDialog.Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="AddNewLocationDialog.Info" xml:space="preserve">
    <value>Longitude and Latitude have to be set later in the Settings Menu</value>
  </data>
  <data name="AddNewLocationDialog.Place" xml:space="preserve">
    <value>Place</value>
  </data>
  <data name="AddNewPersonDialog.Firstname" xml:space="preserve">
    <value>Firstname</value>
  </data>
  <data name="AddNewPersonDialog.Lastname" xml:space="preserve">
    <value>Lastname</value>
  </data>
  <data name="AddPictureSettingsDialog.AddPictureSettings" xml:space="preserve">
    <value>Add Picture Settings</value>
  </data>
  <data name="AddPictureSettingsDialog.Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="AddPictureSettingsDialog.KeepCategory" xml:space="preserve">
    <value>Keep Category</value>
  </data>
  <data name="AddPictureSettingsDialog.KeepLocation" xml:space="preserve">
    <value>Keep　Location</value>
  </data>
  <data name="AddPictureSettingsDialog.KeepPeople" xml:space="preserve">
    <value>KeepPeople</value>
  </data>
  <data name="AddPictureSettingsDialog.KeepTags" xml:space="preserve">
    <value>Keep Tags</value>
  </data>
  <data name="GeocodingDialog.Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="GeocodingDialog.Latitude" xml:space="preserve">
    <value>Latitude</value>
  </data>
  <data name="GeocodingDialog.Longitude" xml:space="preserve">
    <value>Longitude</value>
  </data>
  <data name="GeocodingDialog.SaveCoordinates" xml:space="preserve">
    <value>Save Coordinates</value>
  </data>
  <data name="AddNewCollectionDialog.CollectionNameIsEmpty" xml:space="preserve">
    <value>Collection Name is empty</value>
  </data>
  <data name="AddNewCollectionDialog.NewCollectionAdded" xml:space="preserve">
    <value>New Collection added</value>
  </data>
  <data name="AddNewLocationDialog.CountryIsEmpty" xml:space="preserve">
    <value>Country is empty</value>
  </data>
  <data name="AddNewLocationDialog.NewLocationAdded" xml:space="preserve">
    <value>New Location added</value>
  </data>
  <data name="AddNewLocationDialog.PlaceIsEmpty" xml:space="preserve">
    <value>Place is empty</value>
  </data>
  <data name="AddNewPersonDialog.FirstnameIsEmpty" xml:space="preserve">
    <value>Firstname is empty</value>
  </data>
  <data name="AddNewPersonDialog.LastnameIsEmpty" xml:space="preserve">
    <value>Lastname is empty</value>
  </data>
  <data name="AddNewPersonDialog.NewPersonAdded" xml:space="preserve">
    <value>New Person added</value>
  </data>
  <data name="GeocodingDialog.Error" xml:space="preserve">
    <value>Location not found or no Internet connection available</value>
  </data>
  <data name="GeocodingDialog.UpdatedCoordinates" xml:space="preserve">
    <value>Updated Coordinates</value>
  </data>
  <data name="DetailEdit.Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="SearchResult.SortResultBy" xml:space="preserve">
    <value>Sort Result by</value>
  </data>
  <data name="ResultSortCategory.CreatedDateAscending" xml:space="preserve">
    <value>Created Date ascending</value>
  </data>
  <data name="ResultSortCategory.CreatedDateDescending" xml:space="preserve">
    <value>Created Date descending</value>
  </data>
  <data name="ResultSortCategory.PhotizerAddedAscending" xml:space="preserve">
    <value>Date added ascending</value>
  </data>
  <data name="ResultSortCategory.PhotizerAddedDescending" xml:space="preserve">
    <value>Date added descending</value>
  </data>
  <data name="ResultSortCategory.RatingAscending" xml:space="preserve">
    <value>Rating ascending</value>
  </data>
  <data name="ResultSortCategory.RatingDescending" xml:space="preserve">
    <value>Rating descending</value>
  </data>
  <data name="AddNewCameraDialog.Camera" xml:space="preserve">
    <value>Camera</value>
  </data>
  <data name="AddNewCameraDialog.CameraIsEmpty" xml:space="preserve">
    <value>Camera is empty</value>
  </data>
  <data name="AddNewCameraDialog.NewCameraAdded" xml:space="preserve">
    <value>New Camera added</value>
  </data>
  <data name="AddNewCategoryDialog.Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="AddNewCategoryDialog.CategoryIsEmpty" xml:space="preserve">
    <value>Category is empty</value>
  </data>
  <data name="AddNewCategoryDialog.NewCategoryAdded" xml:space="preserve">
    <value>New Category added</value>
  </data>
  <data name="AddNewLenseDialog.Lense" xml:space="preserve">
    <value>Lense</value>
  </data>
  <data name="AddNewLenseDialog.LenseIsEmpty" xml:space="preserve">
    <value>Lense is empty</value>
  </data>
  <data name="AddNewLenseDialog.NewLenseAdded" xml:space="preserve">
    <value>New Lense added</value>
  </data>
  <data name="AddNewTagDialog.NewTagAdded" xml:space="preserve">
    <value>New Tag added</value>
  </data>
  <data name="AddNewTagDialog.Tag" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="AddNewTagDialog.TagIsEmpty" xml:space="preserve">
    <value>Tag is empty</value>
  </data>
  <data name="PhotizerUpdateNotification" xml:space="preserve">
    <value>There is a new version available, do you want to update now?</value>
  </data>
  <data name="PhotizerUpdaterError" xml:space="preserve">
    <value>Error starting Updater:</value>
  </data>
  <data name="PhotizerUpdaterNotFound" xml:space="preserve">
    <value>Update available but Photizer.Updater.exe not found!</value>
  </data>
</root>